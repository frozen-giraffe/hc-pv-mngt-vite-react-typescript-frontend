// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options, urlSearchParamsBodySerializer } from '@hey-api/client-fetch';
import type { LoginAccessTokenData, LoginAccessTokenError, LoginAccessTokenResponse, TestTokenError, TestTokenResponse, RefreshTokenError, RefreshTokenResponse, RecoverPasswordData, RecoverPasswordError, RecoverPasswordResponse, ResetPasswordData, ResetPasswordError, ResetPasswordResponse, RecoverPasswordHtmlContentData, RecoverPasswordHtmlContentError, RecoverPasswordHtmlContentResponse, ReadUsersData, ReadUsersError, ReadUsersResponse, CreateUserData, CreateUserError, CreateUserResponse, ReadUserMeError, ReadUserMeResponse, DeleteUserMeError, DeleteUserMeResponse, UpdateUserMeData, UpdateUserMeError, UpdateUserMeResponse, UpdatePasswordMeData, UpdatePasswordMeError, UpdatePasswordMeResponse, RegisterUserData, RegisterUserError, RegisterUserResponse, ReadUserByIdData, ReadUserByIdError, ReadUserByIdResponse, UpdateUserData, UpdateUserError, UpdateUserResponse, DeleteUserData, DeleteUserError, DeleteUserResponse, AdminResetPasswordData, AdminResetPasswordError, AdminResetPasswordResponse, GetAndFilterProjectsData, GetAndFilterProjectsError, GetAndFilterProjectsResponse, CreateProjectData, CreateProjectError, CreateProjectResponse, ReadProjectData, ReadProjectError, ReadProjectResponse, UpdateProjectData, UpdateProjectError, UpdateProjectResponse, DeleteProjectData, DeleteProjectError, DeleteProjectResponse, ReadProjectTypesError, ReadProjectTypesResponse, CreateProjectTypeData, CreateProjectTypeError, CreateProjectTypeResponse, GetProjectTypeByIdData, GetProjectTypeByIdError, GetProjectTypeByIdResponse, UpdateProjectTypeData, UpdateProjectTypeError, UpdateProjectTypeResponse, ReadBuildingTypesError, ReadBuildingTypesResponse, CreateBuildingTypeData, CreateBuildingTypeError, CreateBuildingTypeResponse, GetBuildingTypeByIdData, GetBuildingTypeByIdError, GetBuildingTypeByIdResponse, UpdateBuildingTypeData, UpdateBuildingTypeError, UpdateBuildingTypeResponse, ReadProjectTaskTypesError, ReadProjectTaskTypesResponse, CreateProjectTaskTypeData, CreateProjectTaskTypeError, CreateProjectTaskTypeResponse, GetProjectTaskTypeByIdData, GetProjectTaskTypeByIdError, GetProjectTaskTypeByIdResponse, UpdateProjectTaskTypeData, UpdateProjectTaskTypeError, UpdateProjectTaskTypeResponse, ReadProjectClassesError, ReadProjectClassesResponse, CreateProjectClassData, CreateProjectClassError, CreateProjectClassResponse, GetProjectClassByIdData, GetProjectClassByIdError, GetProjectClassByIdResponse, UpdateProjectClassData, UpdateProjectClassError, UpdateProjectClassResponse, ReadBuildingStructureTypesError, ReadBuildingStructureTypesResponse, CreateBuildingStructureTypeData, CreateBuildingStructureTypeError, CreateBuildingStructureTypeResponse, GetBuildingStructureTypeByIdData, GetBuildingStructureTypeByIdError, GetBuildingStructureTypeByIdResponse, UpdateBuildingStructureTypeData, UpdateBuildingStructureTypeError, UpdateBuildingStructureTypeResponse, ReadProjectRateAdjustmentClassesError, ReadProjectRateAdjustmentClassesResponse, CreateProjectRateAdjustmentClassData, CreateProjectRateAdjustmentClassError, CreateProjectRateAdjustmentClassResponse, GetProjectRateAdjustmentClassByIdData, GetProjectRateAdjustmentClassByIdError, GetProjectRateAdjustmentClassByIdResponse, UpdateProjectRateAdjustmentClassData, UpdateProjectRateAdjustmentClassError, UpdateProjectRateAdjustmentClassResponse, ReadQualityRatioClassesError, ReadQualityRatioClassesResponse, CreateQualityRaitioClassData, CreateQualityRaitioClassError, CreateQualityRaitioClassResponse, GetQualityRaitioClassByIdData, GetQualityRaitioClassByIdError, GetQualityRaitioClassByIdResponse, UpdateQualityRaitioClassData, UpdateQualityRaitioClassError, UpdateQualityRaitioClassResponse, ReadProdValueCalcRatiosDefaultError, ReadProdValueCalcRatiosDefaultResponse, ReadProdValueCalcRatiosError, ReadProdValueCalcRatiosResponse, CreateProdValueCalcRatioData, CreateProdValueCalcRatioError, CreateProdValueCalcRatioResponse, GetProdValueCalcRatioByIdData, GetProdValueCalcRatioByIdError, GetProdValueCalcRatioByIdResponse, UpdateProdValueCalcRatioData, UpdateProdValueCalcRatioError, UpdateProdValueCalcRatioResponse, DeleteProdValueCalcRatioData, DeleteProdValueCalcRatioError, DeleteProdValueCalcRatioResponse, ReadJobPayoutRatioProfilesData, ReadJobPayoutRatioProfilesError, ReadJobPayoutRatioProfilesResponse, CreateJobPayoutRatioProfileData, CreateJobPayoutRatioProfileError, CreateJobPayoutRatioProfileResponse, GetJobPayoutRatioProfileByIdData, GetJobPayoutRatioProfileByIdError, GetJobPayoutRatioProfileByIdResponse, UpdateJobPayoutRatioProfileData, UpdateJobPayoutRatioProfileError, UpdateJobPayoutRatioProfileResponse, ReadDepartmentPayoutRatiosError, ReadDepartmentPayoutRatiosResponse, GetDepartmentPayoutRatioByIdData, GetDepartmentPayoutRatioByIdError, GetDepartmentPayoutRatioByIdResponse, UpdateDepartmentPayoutRatioByIdData, UpdateDepartmentPayoutRatioByIdError, UpdateDepartmentPayoutRatioByIdResponse, ReadDepartmentPayoutRatiosByProjectClassIdData, ReadDepartmentPayoutRatiosByProjectClassIdError, ReadDepartmentPayoutRatiosByProjectClassIdResponse, GetDepartmentPayoutRatioData, GetDepartmentPayoutRatioError, GetDepartmentPayoutRatioResponse, UpdateDepartmentPayoutRatioByComboData, UpdateDepartmentPayoutRatioByComboError, UpdateDepartmentPayoutRatioByComboResponse, ReadEmployeesData, ReadEmployeesError, ReadEmployeesResponse, CreateEmployeeData, CreateEmployeeError, CreateEmployeeResponse, SearchEmployeeData, SearchEmployeeError, SearchEmployeeResponse, ReadEmployeesByDepartmentData, ReadEmployeesByDepartmentError, ReadEmployeesByDepartmentResponse, GetEmployeeByIdData, GetEmployeeByIdError, GetEmployeeByIdResponse, UpdateEmployeeData, UpdateEmployeeError, UpdateEmployeeResponse, GetEmployeeReportByIdData, GetEmployeeReportByIdError, GetEmployeeReportByIdResponse, GeneratePinyinError, GeneratePinyinResponse, ReadDepartmentsError, ReadDepartmentsResponse, GetDepartmentByIdData, GetDepartmentByIdError, GetDepartmentByIdResponse, ReadWorkLocationsError, ReadWorkLocationsResponse, CreateWorkLocationData, CreateWorkLocationError, CreateWorkLocationResponse, GetWorkLocationByIdData, GetWorkLocationByIdError, GetWorkLocationByIdResponse, UpdateWorkLocationData, UpdateWorkLocationError, UpdateWorkLocationResponse, ReadEmployeeTitlesError, ReadEmployeeTitlesResponse, CreateEmployeeTitleData, CreateEmployeeTitleError, CreateEmployeeTitleResponse, GetEmployeeTitleByIdData, GetEmployeeTitleByIdError, GetEmployeeTitleByIdResponse, UpdateEmployeeTitleData, UpdateEmployeeTitleError, UpdateEmployeeTitleResponse, ReadProfessionalTitlesError, ReadProfessionalTitlesResponse, CreateProfessionalTitleData, CreateProfessionalTitleError, CreateProfessionalTitleResponse, GetProfessionalTitleByIdData, GetProfessionalTitleByIdError, GetProfessionalTitleByIdResponse, UpdateProfessionalTitleData, UpdateProfessionalTitleError, UpdateProfessionalTitleResponse, ReadEmployeeStatusesError, ReadEmployeeStatusesResponse, CreateEmployeeStatusData, CreateEmployeeStatusError, CreateEmployeeStatusResponse, GetEmployeeStatusByIdData, GetEmployeeStatusByIdError, GetEmployeeStatusByIdResponse, UpdateEmployeeStatusData, UpdateEmployeeStatusError, UpdateEmployeeStatusResponse, GetProjectPayoutData, GetProjectPayoutError, GetProjectPayoutResponse, CreateProjectPayoutData, CreateProjectPayoutError, CreateProjectPayoutResponse, GetProjectPayoutByProjectIdData, GetProjectPayoutByProjectIdError, GetProjectPayoutByProjectIdResponse, ReadProjectPayoutData, ReadProjectPayoutError, ReadProjectPayoutResponse, UpdateProjectPayoutData, UpdateProjectPayoutError, UpdateProjectPayoutResponse, GetContractPaymentError, GetContractPaymentResponse, CreateContractPaymentData, CreateContractPaymentError, CreateContractPaymentResponse, GetContractPaymentByProjectPayoutIdData, GetContractPaymentByProjectPayoutIdError, GetContractPaymentByProjectPayoutIdResponse, GetContractPaymentByProjectIdData, GetContractPaymentByProjectIdError, GetContractPaymentByProjectIdResponse, ReadContractPaymentData, ReadContractPaymentError, ReadContractPaymentResponse, UpdateContractPaymentData, UpdateContractPaymentError, UpdateContractPaymentResponse, DeleteContractPaymentData, DeleteContractPaymentError, DeleteContractPaymentResponse, GetProjectListReportData, GetProjectListReportError, GetProjectListReportResponse, GetEmployeeListReportError, GetEmployeeListReportResponse, GetContractPaymentListReportData, GetContractPaymentListReportError, GetContractPaymentListReportResponse, GetEmployeeProjectPayoutListByPaymentYearReportData, GetEmployeeProjectPayoutListByPaymentYearReportError, GetEmployeeProjectPayoutListByPaymentYearReportResponse, GetEmployeeProjectPayoutListByProjectYearReportData, GetEmployeeProjectPayoutListByProjectYearReportError, GetEmployeeProjectPayoutListByProjectYearReportResponse, GetEmployeeProjectProductionValueByProjectYearReportData, GetEmployeeProjectProductionValueByProjectYearReportError, GetEmployeeProjectProductionValueByProjectYearReportResponse, GetCompanyProjectPayoutListByPaymentYearReportData, GetCompanyProjectPayoutListByPaymentYearReportError, GetCompanyProjectPayoutListByPaymentYearReportResponse, GetCompanyProjectPayoutListByProjectYearReportData, GetCompanyProjectPayoutListByProjectYearReportError, GetCompanyProjectPayoutListByProjectYearReportResponse, GetCompanyProjectProductionValueByProjectYearReportData, GetCompanyProjectProductionValueByProjectYearReportError, GetCompanyProjectProductionValueByProjectYearReportResponse, GetProjectPayoutListByPaymentYearReportData, GetProjectPayoutListByPaymentYearReportError, GetProjectPayoutListByPaymentYearReportResponse, GetProjectPayoutListByProjectYearReportData, GetProjectPayoutListByProjectYearReportError, GetProjectPayoutListByProjectYearReportResponse, GetProjectProductionValueReportData, GetProjectProductionValueReportError, GetProjectProductionValueReportResponse, GetProjectPayoutReportData, GetProjectPayoutReportError, GetProjectPayoutReportResponse, GetContractPaymentPayoutListReportData, GetContractPaymentPayoutListReportError, GetContractPaymentPayoutListReportResponse, TestEmailData, TestEmailError, TestEmailResponse, HealthCheckError, HealthCheckResponse, ReadItemsData, ReadItemsError, ReadItemsResponse, CreateItemData, CreateItemError, CreateItemResponse, ReadItemData, ReadItemError, ReadItemResponse, UpdateItemData, UpdateItemError, UpdateItemResponse, DeleteItemData, DeleteItemError, DeleteItemResponse } from './types.gen';

export const client = createClient(createConfig());

export class LoginService {
    /**
     * Login Access Token
     * OAuth2 compatible token login, get an access token for future requests
     */
    public static loginAccessToken<ThrowOnError extends boolean = false>(options: Options<LoginAccessTokenData, ThrowOnError>) {
        return (options?.client ?? client).post<LoginAccessTokenResponse, LoginAccessTokenError, ThrowOnError>({
            ...options,
            ...urlSearchParamsBodySerializer,
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                ...options?.headers
            },
            url: '/api/v1/login/access-token'
        });
    }
    
    /**
     * Test Token
     * Test access token
     */
    public static testToken<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).post<TestTokenResponse, TestTokenError, ThrowOnError>({
            ...options,
            url: '/api/v1/login/test-token'
        });
    }
    
    /**
     * Refresh Token
     * Refresh access token
     */
    public static refreshToken<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).post<RefreshTokenResponse, RefreshTokenError, ThrowOnError>({
            ...options,
            url: '/api/v1/login/refresh-token'
        });
    }
    
    /**
     * Recover Password
     * Password Recovery
     */
    public static recoverPassword<ThrowOnError extends boolean = false>(options: Options<RecoverPasswordData, ThrowOnError>) {
        return (options?.client ?? client).post<RecoverPasswordResponse, RecoverPasswordError, ThrowOnError>({
            ...options,
            url: '/api/v1/password-recovery/{email}'
        });
    }
    
    /**
     * Reset Password
     * Reset password
     */
    public static resetPassword<ThrowOnError extends boolean = false>(options: Options<ResetPasswordData, ThrowOnError>) {
        return (options?.client ?? client).post<ResetPasswordResponse, ResetPasswordError, ThrowOnError>({
            ...options,
            url: '/api/v1/reset-password/'
        });
    }
    
    /**
     * Recover Password Html Content
     * HTML Content for Password Recovery
     */
    public static recoverPasswordHtmlContent<ThrowOnError extends boolean = false>(options: Options<RecoverPasswordHtmlContentData, ThrowOnError>) {
        return (options?.client ?? client).post<RecoverPasswordHtmlContentResponse, RecoverPasswordHtmlContentError, ThrowOnError>({
            ...options,
            url: '/api/v1/password-recovery-html-content/{email}'
        });
    }
    
}

export class UsersService {
    /**
     * Read Users
     * Retrieve users.
     */
    public static readUsers<ThrowOnError extends boolean = false>(options?: Options<ReadUsersData, ThrowOnError>) {
        return (options?.client ?? client).get<ReadUsersResponse, ReadUsersError, ThrowOnError>({
            ...options,
            url: '/api/v1/users/'
        });
    }
    
    /**
     * Create User
     * Create new user.
     */
    public static createUser<ThrowOnError extends boolean = false>(options: Options<CreateUserData, ThrowOnError>) {
        return (options?.client ?? client).post<CreateUserResponse, CreateUserError, ThrowOnError>({
            ...options,
            url: '/api/v1/users/'
        });
    }
    
    /**
     * Read User Me
     * Get current user.
     */
    public static readUserMe<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<ReadUserMeResponse, ReadUserMeError, ThrowOnError>({
            ...options,
            url: '/api/v1/users/me'
        });
    }
    
    /**
     * Delete User Me
     * Delete own user.
     */
    public static deleteUserMe<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteUserMeResponse, DeleteUserMeError, ThrowOnError>({
            ...options,
            url: '/api/v1/users/me'
        });
    }
    
    /**
     * Update User Me
     * Update own user.
     */
    public static updateUserMe<ThrowOnError extends boolean = false>(options: Options<UpdateUserMeData, ThrowOnError>) {
        return (options?.client ?? client).patch<UpdateUserMeResponse, UpdateUserMeError, ThrowOnError>({
            ...options,
            url: '/api/v1/users/me'
        });
    }
    
    /**
     * Update Password Me
     * Update own password.
     */
    public static updatePasswordMe<ThrowOnError extends boolean = false>(options: Options<UpdatePasswordMeData, ThrowOnError>) {
        return (options?.client ?? client).patch<UpdatePasswordMeResponse, UpdatePasswordMeError, ThrowOnError>({
            ...options,
            url: '/api/v1/users/me/password'
        });
    }
    
    /**
     * Register User
     * Create new user without the need to be logged in.
     */
    public static registerUser<ThrowOnError extends boolean = false>(options: Options<RegisterUserData, ThrowOnError>) {
        return (options?.client ?? client).post<RegisterUserResponse, RegisterUserError, ThrowOnError>({
            ...options,
            url: '/api/v1/users/signup'
        });
    }
    
    /**
     * Read User By Id
     * Get a specific user by id.
     */
    public static readUserById<ThrowOnError extends boolean = false>(options: Options<ReadUserByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<ReadUserByIdResponse, ReadUserByIdError, ThrowOnError>({
            ...options,
            url: '/api/v1/users/{user_id}'
        });
    }
    
    /**
     * Update User
     * Update a user.
     */
    public static updateUser<ThrowOnError extends boolean = false>(options: Options<UpdateUserData, ThrowOnError>) {
        return (options?.client ?? client).patch<UpdateUserResponse, UpdateUserError, ThrowOnError>({
            ...options,
            url: '/api/v1/users/{user_id}'
        });
    }
    
    /**
     * Delete User
     * Delete a user.
     */
    public static deleteUser<ThrowOnError extends boolean = false>(options: Options<DeleteUserData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteUserResponse, DeleteUserError, ThrowOnError>({
            ...options,
            url: '/api/v1/users/{user_id}'
        });
    }
    
    /**
     * Admin Reset Password
     * Admin reset user password. Generate a random password and display it to the user.
     */
    public static adminResetPassword<ThrowOnError extends boolean = false>(options: Options<AdminResetPasswordData, ThrowOnError>) {
        return (options?.client ?? client).post<AdminResetPasswordResponse, AdminResetPasswordError, ThrowOnError>({
            ...options,
            url: '/api/v1/users/admin-reset-password/{user_id}'
        });
    }
    
}

export class ProjectsService {
    /**
     * Get And Filter Projects
     * 搜索项目。
     */
    public static getAndFilterProjects<ThrowOnError extends boolean = false>(options?: Options<GetAndFilterProjectsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetAndFilterProjectsResponse, GetAndFilterProjectsError, ThrowOnError>({
            ...options,
            url: '/api/v1/projects/'
        });
    }
    
    /**
     * Create Project
     * Create a new project.
     */
    public static createProject<ThrowOnError extends boolean = false>(options: Options<CreateProjectData, ThrowOnError>) {
        return (options?.client ?? client).post<CreateProjectResponse, CreateProjectError, ThrowOnError>({
            ...options,
            url: '/api/v1/projects/'
        });
    }
    
    /**
     * Read Project
     * Get project by ID.
     */
    public static readProject<ThrowOnError extends boolean = false>(options: Options<ReadProjectData, ThrowOnError>) {
        return (options?.client ?? client).get<ReadProjectResponse, ReadProjectError, ThrowOnError>({
            ...options,
            url: '/api/v1/projects/{id}'
        });
    }
    
    /**
     * Update Project
     * Update a project.
     * 当产值已经计算过并有入账时，个别字段不允许修改。
     */
    public static updateProject<ThrowOnError extends boolean = false>(options: Options<UpdateProjectData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateProjectResponse, UpdateProjectError, ThrowOnError>({
            ...options,
            url: '/api/v1/projects/{id}'
        });
    }
    
    /**
     * Delete Project
     * Delete a project. Related Project Payout, Contract Payment, Contract Payment Payout will be deleted as well. Only allowed if the project year is the current year.
     */
    public static deleteProject<ThrowOnError extends boolean = false>(options: Options<DeleteProjectData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteProjectResponse, DeleteProjectError, ThrowOnError>({
            ...options,
            url: '/api/v1/projects/{id}'
        });
    }
    
}

export class ProjectTypesService {
    /**
     * Read Project Types
     * Retrieve project_types.
     */
    public static readProjectTypes<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<ReadProjectTypesResponse, ReadProjectTypesError, ThrowOnError>({
            ...options,
            url: '/api/v1/project-types/'
        });
    }
    
    /**
     * Create Project Type
     * Create new ProjectType.
     */
    public static createProjectType<ThrowOnError extends boolean = false>(options: Options<CreateProjectTypeData, ThrowOnError>) {
        return (options?.client ?? client).post<CreateProjectTypeResponse, CreateProjectTypeError, ThrowOnError>({
            ...options,
            url: '/api/v1/project-types/'
        });
    }
    
    /**
     * Get Project Type By Id
     * Get Exployee by ID.
     */
    public static getProjectTypeById<ThrowOnError extends boolean = false>(options: Options<GetProjectTypeByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetProjectTypeByIdResponse, GetProjectTypeByIdError, ThrowOnError>({
            ...options,
            url: '/api/v1/project-types/{id}'
        });
    }
    
    /**
     * Update Project Type
     * Update an ProjectType.
     */
    public static updateProjectType<ThrowOnError extends boolean = false>(options: Options<UpdateProjectTypeData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateProjectTypeResponse, UpdateProjectTypeError, ThrowOnError>({
            ...options,
            url: '/api/v1/project-types/{id}'
        });
    }
    
}

export class BuildingTypesService {
    /**
     * Read Building Types
     * Retrieve building_types.
     */
    public static readBuildingTypes<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<ReadBuildingTypesResponse, ReadBuildingTypesError, ThrowOnError>({
            ...options,
            url: '/api/v1/building-types/'
        });
    }
    
    /**
     * Create Building Type
     * Create new BuildingType.
     */
    public static createBuildingType<ThrowOnError extends boolean = false>(options: Options<CreateBuildingTypeData, ThrowOnError>) {
        return (options?.client ?? client).post<CreateBuildingTypeResponse, CreateBuildingTypeError, ThrowOnError>({
            ...options,
            url: '/api/v1/building-types/'
        });
    }
    
    /**
     * Get Building Type By Id
     * Get Exployee by ID.
     */
    public static getBuildingTypeById<ThrowOnError extends boolean = false>(options: Options<GetBuildingTypeByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetBuildingTypeByIdResponse, GetBuildingTypeByIdError, ThrowOnError>({
            ...options,
            url: '/api/v1/building-types/{id}'
        });
    }
    
    /**
     * Update Building Type
     * Update an BuildingType.
     */
    public static updateBuildingType<ThrowOnError extends boolean = false>(options: Options<UpdateBuildingTypeData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateBuildingTypeResponse, UpdateBuildingTypeError, ThrowOnError>({
            ...options,
            url: '/api/v1/building-types/{id}'
        });
    }
    
}

export class ProjectTaskTypesService {
    /**
     * Read Project Task Types
     * Retrieve project_task_types.
     */
    public static readProjectTaskTypes<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<ReadProjectTaskTypesResponse, ReadProjectTaskTypesError, ThrowOnError>({
            ...options,
            url: '/api/v1/project-task-types/'
        });
    }
    
    /**
     * Create Project Task Type
     * Create new ProjectTaskType.
     */
    public static createProjectTaskType<ThrowOnError extends boolean = false>(options: Options<CreateProjectTaskTypeData, ThrowOnError>) {
        return (options?.client ?? client).post<CreateProjectTaskTypeResponse, CreateProjectTaskTypeError, ThrowOnError>({
            ...options,
            url: '/api/v1/project-task-types/'
        });
    }
    
    /**
     * Get Project Task Type By Id
     * Get ProjectTaskType by ID.
     */
    public static getProjectTaskTypeById<ThrowOnError extends boolean = false>(options: Options<GetProjectTaskTypeByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetProjectTaskTypeByIdResponse, GetProjectTaskTypeByIdError, ThrowOnError>({
            ...options,
            url: '/api/v1/project-task-types/{id}'
        });
    }
    
    /**
     * Update Project Task Type
     * Update an ProjectTaskType.
     */
    public static updateProjectTaskType<ThrowOnError extends boolean = false>(options: Options<UpdateProjectTaskTypeData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateProjectTaskTypeResponse, UpdateProjectTaskTypeError, ThrowOnError>({
            ...options,
            url: '/api/v1/project-task-types/{id}'
        });
    }
    
}

export class ProjectClassesService {
    /**
     * Read Project Classes
     * Retrieve ProjectClasses.
     */
    public static readProjectClasses<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<ReadProjectClassesResponse, ReadProjectClassesError, ThrowOnError>({
            ...options,
            url: '/api/v1/project-classes/'
        });
    }
    
    /**
     * Create Project Class
     * Create new ProjectClass.
     */
    public static createProjectClass<ThrowOnError extends boolean = false>(options: Options<CreateProjectClassData, ThrowOnError>) {
        return (options?.client ?? client).post<CreateProjectClassResponse, CreateProjectClassError, ThrowOnError>({
            ...options,
            url: '/api/v1/project-classes/'
        });
    }
    
    /**
     * Get Project Class By Id
     * Get ProjectClass by ID.
     */
    public static getProjectClassById<ThrowOnError extends boolean = false>(options: Options<GetProjectClassByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetProjectClassByIdResponse, GetProjectClassByIdError, ThrowOnError>({
            ...options,
            url: '/api/v1/project-classes/{id}'
        });
    }
    
    /**
     * Update Project Class
     * Update an ProjectClass.
     */
    public static updateProjectClass<ThrowOnError extends boolean = false>(options: Options<UpdateProjectClassData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateProjectClassResponse, UpdateProjectClassError, ThrowOnError>({
            ...options,
            url: '/api/v1/project-classes/{id}'
        });
    }
    
}

export class BuildingStructureTypesService {
    /**
     * Read Building Structure Types
     * Retrieve BuildingStructureTypes.
     */
    public static readBuildingStructureTypes<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<ReadBuildingStructureTypesResponse, ReadBuildingStructureTypesError, ThrowOnError>({
            ...options,
            url: '/api/v1/building-structure-types/'
        });
    }
    
    /**
     * Create Building Structure Type
     * Create new BuildingStructureType.
     */
    public static createBuildingStructureType<ThrowOnError extends boolean = false>(options: Options<CreateBuildingStructureTypeData, ThrowOnError>) {
        return (options?.client ?? client).post<CreateBuildingStructureTypeResponse, CreateBuildingStructureTypeError, ThrowOnError>({
            ...options,
            url: '/api/v1/building-structure-types/'
        });
    }
    
    /**
     * Get Building Structure Type By Id
     * Get BuildingStructureType by ID.
     */
    public static getBuildingStructureTypeById<ThrowOnError extends boolean = false>(options: Options<GetBuildingStructureTypeByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetBuildingStructureTypeByIdResponse, GetBuildingStructureTypeByIdError, ThrowOnError>({
            ...options,
            url: '/api/v1/building-structure-types/{id}'
        });
    }
    
    /**
     * Update Building Structure Type
     * Update an BuildingStructureType.
     */
    public static updateBuildingStructureType<ThrowOnError extends boolean = false>(options: Options<UpdateBuildingStructureTypeData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateBuildingStructureTypeResponse, UpdateBuildingStructureTypeError, ThrowOnError>({
            ...options,
            url: '/api/v1/building-structure-types/{id}'
        });
    }
    
}

export class ProjectRateAdjustmentClassesService {
    /**
     * Read Project Rate Adjustment Classes
     * Retrieve project_rate_adjustment_classes.
     */
    public static readProjectRateAdjustmentClasses<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<ReadProjectRateAdjustmentClassesResponse, ReadProjectRateAdjustmentClassesError, ThrowOnError>({
            ...options,
            url: '/api/v1/project-rate-adjustment-classes/'
        });
    }
    
    /**
     * Create Project Rate Adjustment Class
     * Create new ProjectRateAdjustmentClass.
     */
    public static createProjectRateAdjustmentClass<ThrowOnError extends boolean = false>(options: Options<CreateProjectRateAdjustmentClassData, ThrowOnError>) {
        return (options?.client ?? client).post<CreateProjectRateAdjustmentClassResponse, CreateProjectRateAdjustmentClassError, ThrowOnError>({
            ...options,
            url: '/api/v1/project-rate-adjustment-classes/'
        });
    }
    
    /**
     * Get Project Rate Adjustment Class By Id
     * Get Exployee by ID.
     */
    public static getProjectRateAdjustmentClassById<ThrowOnError extends boolean = false>(options: Options<GetProjectRateAdjustmentClassByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetProjectRateAdjustmentClassByIdResponse, GetProjectRateAdjustmentClassByIdError, ThrowOnError>({
            ...options,
            url: '/api/v1/project-rate-adjustment-classes/{id}'
        });
    }
    
    /**
     * Update Project Rate Adjustment Class
     * Update an ProjectRateAdjustmentClass.
     */
    public static updateProjectRateAdjustmentClass<ThrowOnError extends boolean = false>(options: Options<UpdateProjectRateAdjustmentClassData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateProjectRateAdjustmentClassResponse, UpdateProjectRateAdjustmentClassError, ThrowOnError>({
            ...options,
            url: '/api/v1/project-rate-adjustment-classes/{id}'
        });
    }
    
}

export class QualityRatioClassesService {
    /**
     * Read Quality Ratio Classes
     * Retrieve quality_raitio_classes.
     */
    public static readQualityRatioClasses<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<ReadQualityRatioClassesResponse, ReadQualityRatioClassesError, ThrowOnError>({
            ...options,
            url: '/api/v1/quality-ratio-classes/'
        });
    }
    
    /**
     * Create Quality Raitio Class
     * Create new QualityRatioClass.
     */
    public static createQualityRaitioClass<ThrowOnError extends boolean = false>(options: Options<CreateQualityRaitioClassData, ThrowOnError>) {
        return (options?.client ?? client).post<CreateQualityRaitioClassResponse, CreateQualityRaitioClassError, ThrowOnError>({
            ...options,
            url: '/api/v1/quality-ratio-classes/'
        });
    }
    
    /**
     * Get Quality Raitio Class By Id
     * Get Exployee by ID.
     */
    public static getQualityRaitioClassById<ThrowOnError extends boolean = false>(options: Options<GetQualityRaitioClassByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetQualityRaitioClassByIdResponse, GetQualityRaitioClassByIdError, ThrowOnError>({
            ...options,
            url: '/api/v1/quality-ratio-classes/{id}'
        });
    }
    
    /**
     * Update Quality Raitio Class
     * Update an QualityRatioClass.
     */
    public static updateQualityRaitioClass<ThrowOnError extends boolean = false>(options: Options<UpdateQualityRaitioClassData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateQualityRaitioClassResponse, UpdateQualityRaitioClassError, ThrowOnError>({
            ...options,
            url: '/api/v1/quality-ratio-classes/{id}'
        });
    }
    
}

export class ProdValueCalcRatiosService {
    /**
     * Read Prod Value Calc Ratios Default
     * 获取默认的施工图产值到下发产值比。
     */
    public static readProdValueCalcRatiosDefault<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<ReadProdValueCalcRatiosDefaultResponse, ReadProdValueCalcRatiosDefaultError, ThrowOnError>({
            ...options,
            url: '/api/v1/prod-value-calc-ratios/default'
        });
    }
    
    /**
     * Read Prod Value Calc Ratios
     * 获取施工图产值到下发产值比。
     */
    public static readProdValueCalcRatios<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<ReadProdValueCalcRatiosResponse, ReadProdValueCalcRatiosError, ThrowOnError>({
            ...options,
            url: '/api/v1/prod-value-calc-ratios/'
        });
    }
    
    /**
     * Create Prod Value Calc Ratio
     * 创建新的施工图产值到下发产值比。
     */
    public static createProdValueCalcRatio<ThrowOnError extends boolean = false>(options: Options<CreateProdValueCalcRatioData, ThrowOnError>) {
        return (options?.client ?? client).post<CreateProdValueCalcRatioResponse, CreateProdValueCalcRatioError, ThrowOnError>({
            ...options,
            url: '/api/v1/prod-value-calc-ratios/'
        });
    }
    
    /**
     * Get Prod Value Calc Ratio By Id
     * 使用id获取施工图产值到下发产值比。
     */
    public static getProdValueCalcRatioById<ThrowOnError extends boolean = false>(options: Options<GetProdValueCalcRatioByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetProdValueCalcRatioByIdResponse, GetProdValueCalcRatioByIdError, ThrowOnError>({
            ...options,
            url: '/api/v1/prod-value-calc-ratios/{id}'
        });
    }
    
    /**
     * Update Prod Value Calc Ratio
     * 更新施工图产值到下发产值比。
     */
    public static updateProdValueCalcRatio<ThrowOnError extends boolean = false>(options: Options<UpdateProdValueCalcRatioData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateProdValueCalcRatioResponse, UpdateProdValueCalcRatioError, ThrowOnError>({
            ...options,
            url: '/api/v1/prod-value-calc-ratios/{id}'
        });
    }
    
    /**
     * Delete Prod Value Calc Ratio
     * 删除施工图产值到下发产值比。
     */
    public static deleteProdValueCalcRatio<ThrowOnError extends boolean = false>(options: Options<DeleteProdValueCalcRatioData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteProdValueCalcRatioResponse, DeleteProdValueCalcRatioError, ThrowOnError>({
            ...options,
            url: '/api/v1/prod-value-calc-ratios/{id}'
        });
    }
    
}

export class JobPayoutRatioProfilesService {
    /**
     * Read Job Payout Ratio Profiles
     * Retrieve JobPayoutRatioProfile.
     */
    public static readJobPayoutRatioProfiles<ThrowOnError extends boolean = false>(options?: Options<ReadJobPayoutRatioProfilesData, ThrowOnError>) {
        return (options?.client ?? client).get<ReadJobPayoutRatioProfilesResponse, ReadJobPayoutRatioProfilesError, ThrowOnError>({
            ...options,
            url: '/api/v1/job-payout-ratio-profiles/'
        });
    }
    
    /**
     * Create Job Payout Ratio Profile
     * Create new JobPayoutRatioProfile.
     */
    public static createJobPayoutRatioProfile<ThrowOnError extends boolean = false>(options: Options<CreateJobPayoutRatioProfileData, ThrowOnError>) {
        return (options?.client ?? client).post<CreateJobPayoutRatioProfileResponse, CreateJobPayoutRatioProfileError, ThrowOnError>({
            ...options,
            url: '/api/v1/job-payout-ratio-profiles/'
        });
    }
    
    /**
     * Get Job Payout Ratio Profile By Id
     * Get JobPayoutRatioProfile by ID.
     */
    public static getJobPayoutRatioProfileById<ThrowOnError extends boolean = false>(options: Options<GetJobPayoutRatioProfileByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetJobPayoutRatioProfileByIdResponse, GetJobPayoutRatioProfileByIdError, ThrowOnError>({
            ...options,
            url: '/api/v1/job-payout-ratio-profiles/{id}'
        });
    }
    
    /**
     * Update Job Payout Ratio Profile
     * Update an JobPayoutRatioProfile.
     */
    public static updateJobPayoutRatioProfile<ThrowOnError extends boolean = false>(options: Options<UpdateJobPayoutRatioProfileData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateJobPayoutRatioProfileResponse, UpdateJobPayoutRatioProfileError, ThrowOnError>({
            ...options,
            url: '/api/v1/job-payout-ratio-profiles/{id}'
        });
    }
    
}

export class DepartmentPayoutRatiosService {
    /**
     * Read Department Payout Ratios
     * Retrieve DepartmentPayoutRatio.
     */
    public static readDepartmentPayoutRatios<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<ReadDepartmentPayoutRatiosResponse, ReadDepartmentPayoutRatiosError, ThrowOnError>({
            ...options,
            url: '/api/v1/department-payout-ratios/'
        });
    }
    
    /**
     * Get Department Payout Ratio By Id
     * Retrieve DepartmentPayoutRatio.
     */
    public static getDepartmentPayoutRatioById<ThrowOnError extends boolean = false>(options: Options<GetDepartmentPayoutRatioByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDepartmentPayoutRatioByIdResponse, GetDepartmentPayoutRatioByIdError, ThrowOnError>({
            ...options,
            url: '/api/v1/department-payout-ratios/{id}'
        });
    }
    
    /**
     * Update Department Payout Ratio By Id
     * Update an DepartmentPayoutRatio.
     */
    public static updateDepartmentPayoutRatioById<ThrowOnError extends boolean = false>(options: Options<UpdateDepartmentPayoutRatioByIdData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateDepartmentPayoutRatioByIdResponse, UpdateDepartmentPayoutRatioByIdError, ThrowOnError>({
            ...options,
            url: '/api/v1/department-payout-ratios/{id}'
        });
    }
    
    /**
     * Read Department Payout Ratios By Project Class Id
     * Read all DepartmentPayoutRatios under a project class id.
     */
    public static readDepartmentPayoutRatiosByProjectClassId<ThrowOnError extends boolean = false>(options: Options<ReadDepartmentPayoutRatiosByProjectClassIdData, ThrowOnError>) {
        return (options?.client ?? client).get<ReadDepartmentPayoutRatiosByProjectClassIdResponse, ReadDepartmentPayoutRatiosByProjectClassIdError, ThrowOnError>({
            ...options,
            url: '/api/v1/department-payout-ratios/by-project-class-id/{project_class_id}'
        });
    }
    
    /**
     * Get Department Payout Ratio
     * Get DepartmentPayoutRatio for a project class id and project rate adjustment class combo.
     */
    public static getDepartmentPayoutRatio<ThrowOnError extends boolean = false>(options: Options<GetDepartmentPayoutRatioData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDepartmentPayoutRatioResponse, GetDepartmentPayoutRatioError, ThrowOnError>({
            ...options,
            url: '/api/v1/department-payout-ratios/project-class/{project_class_id}/project-rate-adjustment-class/{project_rate_adjustment_class_id}'
        });
    }
    
    /**
     * Update Department Payout Ratio By Combo
     * Update an DepartmentPayoutRatio.
     */
    public static updateDepartmentPayoutRatioByCombo<ThrowOnError extends boolean = false>(options: Options<UpdateDepartmentPayoutRatioByComboData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateDepartmentPayoutRatioByComboResponse, UpdateDepartmentPayoutRatioByComboError, ThrowOnError>({
            ...options,
            url: '/api/v1/department-payout-ratios/project-class/{project_class_id}/project-rate-adjustment-class/{project_rate_adjustment_class_id}'
        });
    }
    
}

export class EmployeeService {
    /**
     * Read Employees
     * Retrieve employees.
     */
    public static readEmployees<ThrowOnError extends boolean = false>(options?: Options<ReadEmployeesData, ThrowOnError>) {
        return (options?.client ?? client).get<ReadEmployeesResponse, ReadEmployeesError, ThrowOnError>({
            ...options,
            url: '/api/v1/employee/'
        });
    }
    
    /**
     * Create Employee
     * Create new Employee.
     */
    public static createEmployee<ThrowOnError extends boolean = false>(options: Options<CreateEmployeeData, ThrowOnError>) {
        return (options?.client ?? client).post<CreateEmployeeResponse, CreateEmployeeError, ThrowOnError>({
            ...options,
            url: '/api/v1/employee/'
        });
    }
    
    /**
     * Search Employee
     * 通过query搜索员工。
     *
     * 搜索的字段包括：initial, pinyin, name
     * 如果提供department_id，则该部门的员工优先级最高。
     *
     * 排序规则：
     * 1. 在指定部门（如果提供）
     * 2. 匹配拼音开头
     * 3. 匹配首字母开头
     * 4. 拼音全文匹配
     * 5. 首字母全文匹配
     * 6. 名字全文匹配
     *
     * 不搜索id.
     */
    public static searchEmployee<ThrowOnError extends boolean = false>(options: Options<SearchEmployeeData, ThrowOnError>) {
        return (options?.client ?? client).get<SearchEmployeeResponse, SearchEmployeeError, ThrowOnError>({
            ...options,
            url: '/api/v1/employee/search/{query}'
        });
    }
    
    /**
     * Read Employees By Department
     * Retrieve employees by department ID.
     */
    public static readEmployeesByDepartment<ThrowOnError extends boolean = false>(options?: Options<ReadEmployeesByDepartmentData, ThrowOnError>) {
        return (options?.client ?? client).get<ReadEmployeesByDepartmentResponse, ReadEmployeesByDepartmentError, ThrowOnError>({
            ...options,
            url: '/api/v1/employee/by-department-id/{id}'
        });
    }
    
    /**
     * Get Employee By Id
     * Get Exployee by ID.
     */
    public static getEmployeeById<ThrowOnError extends boolean = false>(options: Options<GetEmployeeByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetEmployeeByIdResponse, GetEmployeeByIdError, ThrowOnError>({
            ...options,
            url: '/api/v1/employee/{id}'
        });
    }
    
    /**
     * Update Employee
     * Update an Employee.
     */
    public static updateEmployee<ThrowOnError extends boolean = false>(options: Options<UpdateEmployeeData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateEmployeeResponse, UpdateEmployeeError, ThrowOnError>({
            ...options,
            url: '/api/v1/employee/{id}'
        });
    }
    
    /**
     * Get Employee Report By Id
     * Get Report by Employee ID.
     */
    public static getEmployeeReportById<ThrowOnError extends boolean = false>(options: Options<GetEmployeeReportByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetEmployeeReportByIdResponse, GetEmployeeReportByIdError, ThrowOnError>({
            ...options,
            url: '/api/v1/employee/report/{id}'
        });
    }
    
    /**
     * Generate Pinyin
     * Generate pinyin for a given name.
     */
    public static generatePinyin<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).post<GeneratePinyinResponse, GeneratePinyinError, ThrowOnError>({
            ...options,
            url: '/api/v1/employee/generate-pinyin'
        });
    }
    
}

export class DepartmentsService {
    /**
     * Read Departments
     * Retrieve departrments.
     */
    public static readDepartments<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<ReadDepartmentsResponse, ReadDepartmentsError, ThrowOnError>({
            ...options,
            url: '/api/v1/departments/'
        });
    }
    
    /**
     * Get Department By Id
     * Get Exployee by ID.
     */
    public static getDepartmentById<ThrowOnError extends boolean = false>(options: Options<GetDepartmentByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetDepartmentByIdResponse, GetDepartmentByIdError, ThrowOnError>({
            ...options,
            url: '/api/v1/departments/{id}'
        });
    }
    
}

export class WorkLocationsService {
    /**
     * Read Worklocations
     * Retrieve WorkLocations.
     */
    public static readWorkLocations<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<ReadWorkLocationsResponse, ReadWorkLocationsError, ThrowOnError>({
            ...options,
            url: '/api/v1/work-locations/'
        });
    }
    
    /**
     * Create Worklocation
     * Create new WorkLocation.
     */
    public static createWorkLocation<ThrowOnError extends boolean = false>(options: Options<CreateWorkLocationData, ThrowOnError>) {
        return (options?.client ?? client).post<CreateWorkLocationResponse, CreateWorkLocationError, ThrowOnError>({
            ...options,
            url: '/api/v1/work-locations/'
        });
    }
    
    /**
     * Get Worklocation By Id
     * Get Exployee by ID.
     */
    public static getWorkLocationById<ThrowOnError extends boolean = false>(options: Options<GetWorkLocationByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetWorkLocationByIdResponse, GetWorkLocationByIdError, ThrowOnError>({
            ...options,
            url: '/api/v1/work-locations/{id}'
        });
    }
    
    /**
     * Update Worklocation
     * Update an WorkLocation.
     */
    public static updateWorkLocation<ThrowOnError extends boolean = false>(options: Options<UpdateWorkLocationData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateWorkLocationResponse, UpdateWorkLocationError, ThrowOnError>({
            ...options,
            url: '/api/v1/work-locations/{id}'
        });
    }
    
}

export class EmployeeTitlesService {
    /**
     * Read Employee Titles
     * Retrieve EmployeeTitles.
     */
    public static readEmployeeTitles<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<ReadEmployeeTitlesResponse, ReadEmployeeTitlesError, ThrowOnError>({
            ...options,
            url: '/api/v1/employee-titles/'
        });
    }
    
    /**
     * Create Employee Title
     * Create new EmployeeTitle.
     */
    public static createEmployeeTitle<ThrowOnError extends boolean = false>(options: Options<CreateEmployeeTitleData, ThrowOnError>) {
        return (options?.client ?? client).post<CreateEmployeeTitleResponse, CreateEmployeeTitleError, ThrowOnError>({
            ...options,
            url: '/api/v1/employee-titles/'
        });
    }
    
    /**
     * Get Employee Title By Id
     * Get EmployeeTitle by ID.
     */
    public static getEmployeeTitleById<ThrowOnError extends boolean = false>(options: Options<GetEmployeeTitleByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetEmployeeTitleByIdResponse, GetEmployeeTitleByIdError, ThrowOnError>({
            ...options,
            url: '/api/v1/employee-titles/{id}'
        });
    }
    
    /**
     * Update Employee Title
     * Update an EmployeeTitle.
     */
    public static updateEmployeeTitle<ThrowOnError extends boolean = false>(options: Options<UpdateEmployeeTitleData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateEmployeeTitleResponse, UpdateEmployeeTitleError, ThrowOnError>({
            ...options,
            url: '/api/v1/employee-titles/{id}'
        });
    }
    
}

export class ProfessionalTitlesService {
    /**
     * Read Professional Titles
     * Retrieve professional_titles.
     */
    public static readProfessionalTitles<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<ReadProfessionalTitlesResponse, ReadProfessionalTitlesError, ThrowOnError>({
            ...options,
            url: '/api/v1/professional-titles/'
        });
    }
    
    /**
     * Create Professional Title
     * Create new ProfessionalTitle.
     */
    public static createProfessionalTitle<ThrowOnError extends boolean = false>(options: Options<CreateProfessionalTitleData, ThrowOnError>) {
        return (options?.client ?? client).post<CreateProfessionalTitleResponse, CreateProfessionalTitleError, ThrowOnError>({
            ...options,
            url: '/api/v1/professional-titles/'
        });
    }
    
    /**
     * Get Professional Title By Id
     * Get Exployee by ID.
     */
    public static getProfessionalTitleById<ThrowOnError extends boolean = false>(options: Options<GetProfessionalTitleByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetProfessionalTitleByIdResponse, GetProfessionalTitleByIdError, ThrowOnError>({
            ...options,
            url: '/api/v1/professional-titles/{id}'
        });
    }
    
    /**
     * Update Professional Title
     * Update an ProfessionalTitle.
     */
    public static updateProfessionalTitle<ThrowOnError extends boolean = false>(options: Options<UpdateProfessionalTitleData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateProfessionalTitleResponse, UpdateProfessionalTitleError, ThrowOnError>({
            ...options,
            url: '/api/v1/professional-titles/{id}'
        });
    }
    
}

export class EmployeeStatusesService {
    /**
     * Read Employee Statuses
     * Retrieve employees.
     */
    public static readEmployeeStatuses<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<ReadEmployeeStatusesResponse, ReadEmployeeStatusesError, ThrowOnError>({
            ...options,
            url: '/api/v1/employee-statuses/'
        });
    }
    
    /**
     * Create Employee Status
     * Create new EmployStatus.
     */
    public static createEmployeeStatus<ThrowOnError extends boolean = false>(options: Options<CreateEmployeeStatusData, ThrowOnError>) {
        return (options?.client ?? client).post<CreateEmployeeStatusResponse, CreateEmployeeStatusError, ThrowOnError>({
            ...options,
            url: '/api/v1/employee-statuses/'
        });
    }
    
    /**
     * Get Employee Status By Id
     * Get Exployee by ID.
     */
    public static getEmployeeStatusById<ThrowOnError extends boolean = false>(options: Options<GetEmployeeStatusByIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetEmployeeStatusByIdResponse, GetEmployeeStatusByIdError, ThrowOnError>({
            ...options,
            url: '/api/v1/employee-statuses/{id}'
        });
    }
    
    /**
     * Update Employee Status
     * Update an EmployStatus.
     */
    public static updateEmployeeStatus<ThrowOnError extends boolean = false>(options: Options<UpdateEmployeeStatusData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateEmployeeStatusResponse, UpdateEmployeeStatusError, ThrowOnError>({
            ...options,
            url: '/api/v1/employee-statuses/{id}'
        });
    }
    
}

export class ProjectPayoutsService {
    /**
     * Get Project Payout
     * Retrieve ProjectPayouts.
     */
    public static getProjectPayout<ThrowOnError extends boolean = false>(options?: Options<GetProjectPayoutData, ThrowOnError>) {
        return (options?.client ?? client).get<GetProjectPayoutResponse, GetProjectPayoutError, ThrowOnError>({
            ...options,
            url: '/api/v1/project-payouts/'
        });
    }
    
    /**
     * Create Project Payout
     * Create a new project payout.
     */
    public static createProjectPayout<ThrowOnError extends boolean = false>(options: Options<CreateProjectPayoutData, ThrowOnError>) {
        return (options?.client ?? client).post<CreateProjectPayoutResponse, CreateProjectPayoutError, ThrowOnError>({
            ...options,
            url: '/api/v1/project-payouts/'
        });
    }
    
    /**
     * Get Project Payout By Project Id
     * Get project payout *by project ID*.
     */
    public static getProjectPayoutByProjectId<ThrowOnError extends boolean = false>(options: Options<GetProjectPayoutByProjectIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetProjectPayoutByProjectIdResponse, GetProjectPayoutByProjectIdError, ThrowOnError>({
            ...options,
            url: '/api/v1/project-payouts/by-project-id/{id}'
        });
    }
    
    /**
     * Read Project Payout
     * Get project payout by ID.
     */
    public static readProjectPayout<ThrowOnError extends boolean = false>(options: Options<ReadProjectPayoutData, ThrowOnError>) {
        return (options?.client ?? client).get<ReadProjectPayoutResponse, ReadProjectPayoutError, ThrowOnError>({
            ...options,
            url: '/api/v1/project-payouts/{id}'
        });
    }
    
    /**
     * Update Project Payout
     * Update a project payout.
     *
     * Recalculate the employee payout for the current year if contract payment exists.
     *
     * 当合同回款已经开始分配时，不允许修改价格信息
     */
    public static updateProjectPayout<ThrowOnError extends boolean = false>(options: Options<UpdateProjectPayoutData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateProjectPayoutResponse, UpdateProjectPayoutError, ThrowOnError>({
            ...options,
            url: '/api/v1/project-payouts/{id}'
        });
    }
    
}

export class ContractPaymentsService {
    /**
     * Get Contract Payment
     * Retrieve ContractPayments.
     */
    public static getContractPayment<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetContractPaymentResponse, GetContractPaymentError, ThrowOnError>({
            ...options,
            url: '/api/v1/contract-payments/'
        });
    }
    
    /**
     * Create Contract Payment
     * Create a new contract_payment payout.
     */
    public static createContractPayment<ThrowOnError extends boolean = false>(options: Options<CreateContractPaymentData, ThrowOnError>) {
        return (options?.client ?? client).post<CreateContractPaymentResponse, CreateContractPaymentError, ThrowOnError>({
            ...options,
            url: '/api/v1/contract-payments/'
        });
    }
    
    /**
     * Get Contract Payment By Project Payout Id
     * Get contract_payment payout *by project payout ID*.
     */
    public static getContractPaymentByProjectPayoutId<ThrowOnError extends boolean = false>(options: Options<GetContractPaymentByProjectPayoutIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetContractPaymentByProjectPayoutIdResponse, GetContractPaymentByProjectPayoutIdError, ThrowOnError>({
            ...options,
            url: '/api/v1/contract-payments/by-project-payout-id/{id}'
        });
    }
    
    /**
     * Get Contract Payment By Project Id
     * Get contract_payment payout *by project ID*.
     */
    public static getContractPaymentByProjectId<ThrowOnError extends boolean = false>(options: Options<GetContractPaymentByProjectIdData, ThrowOnError>) {
        return (options?.client ?? client).get<GetContractPaymentByProjectIdResponse, GetContractPaymentByProjectIdError, ThrowOnError>({
            ...options,
            url: '/api/v1/contract-payments/by-project-id/{id}'
        });
    }
    
    /**
     * Read Contract Payment
     * Get contract_payment payout by ID.
     */
    public static readContractPayment<ThrowOnError extends boolean = false>(options: Options<ReadContractPaymentData, ThrowOnError>) {
        return (options?.client ?? client).get<ReadContractPaymentResponse, ReadContractPaymentError, ThrowOnError>({
            ...options,
            url: '/api/v1/contract-payments/{id}'
        });
    }
    
    /**
     * Update Contract Payment
     * Update a contract_payment.
     */
    public static updateContractPayment<ThrowOnError extends boolean = false>(options: Options<UpdateContractPaymentData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateContractPaymentResponse, UpdateContractPaymentError, ThrowOnError>({
            ...options,
            url: '/api/v1/contract-payments/{id}'
        });
    }
    
    /**
     * Delete Contract Payment
     * Delete a contract_payment. Related Project Payout, Contract Payment, Contract Payment Payout will be deleted as well. Only allowed if the contract_payment year is the current year.
     */
    public static deleteContractPayment<ThrowOnError extends boolean = false>(options: Options<DeleteContractPaymentData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteContractPaymentResponse, DeleteContractPaymentError, ThrowOnError>({
            ...options,
            url: '/api/v1/contract-payments/{id}'
        });
    }
    
}

export class ReportsService {
    /**
     * 生成项目列表报告
     * 生成项目列表报告。
     * 如果提供项目年份，则生成指定年份的项目列表报告。
     * 否则生成所有年份的项目列表报告。
     */
    public static getProjectListReport<ThrowOnError extends boolean = false>(options?: Options<GetProjectListReportData, ThrowOnError>) {
        return (options?.client ?? client).get<GetProjectListReportResponse, GetProjectListReportError, ThrowOnError>({
            ...options,
            url: '/api/v1/reports/project-list'
        });
    }
    
    /**
     * 生成员工列表报告
     * 生成员工列表报告。
     */
    public static getEmployeeListReport<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetEmployeeListReportResponse, GetEmployeeListReportError, ThrowOnError>({
            ...options,
            url: '/api/v1/reports/employee-list'
        });
    }
    
    /**
     * 生成回款列表报告
     * 生成回款报告。
     * 如果提供项目id，则生成指定项目的回款报告。
     * 如果提供时间范围，则生成指定时间范围内的回款报告。
     * 否则生成所有回款报告。
     */
    public static getContractPaymentListReport<ThrowOnError extends boolean = false>(options?: Options<GetContractPaymentListReportData, ThrowOnError>) {
        return (options?.client ?? client).get<GetContractPaymentListReportResponse, GetContractPaymentListReportError, ThrowOnError>({
            ...options,
            url: '/api/v1/reports/contract-payments'
        });
    }
    
    /**
     * 生成员工按回款年度汇总个人累计兑付产值报告
     * 生成按回款年度汇总个人累计兑付产值报告。
     */
    public static getEmployeeProjectPayoutListByPaymentYearReport<ThrowOnError extends boolean = false>(options: Options<GetEmployeeProjectPayoutListByPaymentYearReportData, ThrowOnError>) {
        return (options?.client ?? client).get<GetEmployeeProjectPayoutListByPaymentYearReportResponse, GetEmployeeProjectPayoutListByPaymentYearReportError, ThrowOnError>({
            ...options,
            url: '/api/v1/reports/employee/project-payout-list-by-payment-year'
        });
    }
    
    /**
     * 生成员工按工程年度汇总个人累计兑付产值报告
     * 生成按工程年度汇总个人累计兑付产值报告。
     */
    public static getEmployeeProjectPayoutListByProjectYearReport<ThrowOnError extends boolean = false>(options: Options<GetEmployeeProjectPayoutListByProjectYearReportData, ThrowOnError>) {
        return (options?.client ?? client).get<GetEmployeeProjectPayoutListByProjectYearReportResponse, GetEmployeeProjectPayoutListByProjectYearReportError, ThrowOnError>({
            ...options,
            url: '/api/v1/reports/employee/project-payout-list-by-project-year'
        });
    }
    
    /**
     * 生成员工按工程年度汇总个人产值报告
     * 生成按工程年度汇总个人产值报告。
     */
    public static getEmployeeProjectProductionValueByProjectYearReport<ThrowOnError extends boolean = false>(options: Options<GetEmployeeProjectProductionValueByProjectYearReportData, ThrowOnError>) {
        return (options?.client ?? client).get<GetEmployeeProjectProductionValueByProjectYearReportResponse, GetEmployeeProjectProductionValueByProjectYearReportError, ThrowOnError>({
            ...options,
            url: '/api/v1/reports/employee/project-production-value-by-project-year'
        });
    }
    
    /**
     * 生成公司按回款年度汇总累计兑付产值报告
     * 生成按回款年度汇总公司累计兑付产值报告。
     */
    public static getCompanyProjectPayoutListByPaymentYearReport<ThrowOnError extends boolean = false>(options: Options<GetCompanyProjectPayoutListByPaymentYearReportData, ThrowOnError>) {
        return (options?.client ?? client).get<GetCompanyProjectPayoutListByPaymentYearReportResponse, GetCompanyProjectPayoutListByPaymentYearReportError, ThrowOnError>({
            ...options,
            url: '/api/v1/reports/company/project-payout-list-by-payment-year'
        });
    }
    
    /**
     * 生成按工程年度汇总公司累计兑付产值报告
     * 生成按工程年度汇总公司累计兑付产值报告。
     */
    public static getCompanyProjectPayoutListByProjectYearReport<ThrowOnError extends boolean = false>(options: Options<GetCompanyProjectPayoutListByProjectYearReportData, ThrowOnError>) {
        return (options?.client ?? client).get<GetCompanyProjectPayoutListByProjectYearReportResponse, GetCompanyProjectPayoutListByProjectYearReportError, ThrowOnError>({
            ...options,
            url: '/api/v1/reports/company/project-payout-list-by-project-year'
        });
    }
    
    /**
     * 生成按工程年度汇总公司产值报告
     * 生成按工程年度汇总公司产值报告。
     */
    public static getCompanyProjectProductionValueByProjectYearReport<ThrowOnError extends boolean = false>(options: Options<GetCompanyProjectProductionValueByProjectYearReportData, ThrowOnError>) {
        return (options?.client ?? client).get<GetCompanyProjectProductionValueByProjectYearReportResponse, GetCompanyProjectProductionValueByProjectYearReportError, ThrowOnError>({
            ...options,
            url: '/api/v1/reports/company/project-production-value-by-project-year'
        });
    }
    
    /**
     * 生成项目按回款年度汇总员工累计兑付产值报告
     * 生成项目按回款年度汇总员工累计兑付产值报告。
     */
    public static getProjectPayoutListByPaymentYearReport<ThrowOnError extends boolean = false>(options: Options<GetProjectPayoutListByPaymentYearReportData, ThrowOnError>) {
        return (options?.client ?? client).get<GetProjectPayoutListByPaymentYearReportResponse, GetProjectPayoutListByPaymentYearReportError, ThrowOnError>({
            ...options,
            url: '/api/v1/reports/project/payout-list-by-payment-year'
        });
    }
    
    /**
     * 生成项目按工程年度汇总员工累计兑付产值报告
     * 生成项目按工程年度汇总员工累计兑付产值报告。
     */
    public static getProjectPayoutListByProjectYearReport<ThrowOnError extends boolean = false>(options: Options<GetProjectPayoutListByProjectYearReportData, ThrowOnError>) {
        return (options?.client ?? client).get<GetProjectPayoutListByProjectYearReportResponse, GetProjectPayoutListByProjectYearReportError, ThrowOnError>({
            ...options,
            url: '/api/v1/reports/project/payout-list-by-project-year'
        });
    }
    
    /**
     * 生成项目员工产值报告
     * 生成项目员工产值报告。
     */
    public static getProjectProductionValueReport<ThrowOnError extends boolean = false>(options: Options<GetProjectProductionValueReportData, ThrowOnError>) {
        return (options?.client ?? client).get<GetProjectProductionValueReportResponse, GetProjectProductionValueReportError, ThrowOnError>({
            ...options,
            url: '/api/v1/reports/project/production-value'
        });
    }
    
    /**
     * 生成项目产值下发表
     * 生成项目产值下发报告。
     */
    public static getProjectPayoutReport<ThrowOnError extends boolean = false>(options: Options<GetProjectPayoutReportData, ThrowOnError>) {
        return (options?.client ?? client).get<GetProjectPayoutReportResponse, GetProjectPayoutReportError, ThrowOnError>({
            ...options,
            url: '/api/v1/reports/project/project-payout'
        });
    }
    
    /**
     * 生成回款下发报告
     * 生成回款下发报告。
     */
    public static getContractPaymentPayoutListReport<ThrowOnError extends boolean = false>(options: Options<GetContractPaymentPayoutListReportData, ThrowOnError>) {
        return (options?.client ?? client).get<GetContractPaymentPayoutListReportResponse, GetContractPaymentPayoutListReportError, ThrowOnError>({
            ...options,
            url: '/api/v1/reports/contract-payment/payout-list'
        });
    }
    
}

export class UtilsService {
    /**
     * Test Email
     * Test emails.
     */
    public static testEmail<ThrowOnError extends boolean = false>(options: Options<TestEmailData, ThrowOnError>) {
        return (options?.client ?? client).post<TestEmailResponse, TestEmailError, ThrowOnError>({
            ...options,
            url: '/api/v1/utils/test-email/'
        });
    }
    
    /**
     * Health Check
     */
    public static healthCheck<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<HealthCheckResponse, HealthCheckError, ThrowOnError>({
            ...options,
            url: '/api/v1/utils/health-check/'
        });
    }
    
}

export class ItemsService {
    /**
     * Read Items
     * Retrieve items.
     */
    public static readItems<ThrowOnError extends boolean = false>(options?: Options<ReadItemsData, ThrowOnError>) {
        return (options?.client ?? client).get<ReadItemsResponse, ReadItemsError, ThrowOnError>({
            ...options,
            url: '/api/v1/items/'
        });
    }
    
    /**
     * Create Item
     * Create new item.
     */
    public static createItem<ThrowOnError extends boolean = false>(options: Options<CreateItemData, ThrowOnError>) {
        return (options?.client ?? client).post<CreateItemResponse, CreateItemError, ThrowOnError>({
            ...options,
            url: '/api/v1/items/'
        });
    }
    
    /**
     * Read Item
     * Get item by ID.
     */
    public static readItem<ThrowOnError extends boolean = false>(options: Options<ReadItemData, ThrowOnError>) {
        return (options?.client ?? client).get<ReadItemResponse, ReadItemError, ThrowOnError>({
            ...options,
            url: '/api/v1/items/{id}'
        });
    }
    
    /**
     * Update Item
     * Update an item.
     */
    public static updateItem<ThrowOnError extends boolean = false>(options: Options<UpdateItemData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateItemResponse, UpdateItemError, ThrowOnError>({
            ...options,
            url: '/api/v1/items/{id}'
        });
    }
    
    /**
     * Delete Item
     * Delete an item.
     */
    public static deleteItem<ThrowOnError extends boolean = false>(options: Options<DeleteItemData, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteItemResponse, DeleteItemError, ThrowOnError>({
            ...options,
            url: '/api/v1/items/{id}'
        });
    }
    
}